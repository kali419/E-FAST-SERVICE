<%- include('partials/userHeader'); -%>
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
<style>

/* Header styles */
.header {
            background: linear-gradient(to right, #11245A, #349dff);
            color: #fff;
            padding: 100px 20px;
            text-align: center;
        }

        .header h1 {
            margin-top: 20px;
            font-size: 2.5rem;
            margin-bottom: 20px;
        }

        .header p {
            font-size: 16px;
            max-width: 750px;
            margin: 18px auto;
        }

        .header .buttons {
            display: flex;
            gap: 20px;
            justify-content: center;
        }

        .header .action-btn {
            background-color: rgb(15, 35, 100);
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            transition: scale 0.2s ease;
        }

        .header .action-btn:hover {
            transform: scale(1.05);
        }

        .header .action-btn:active {
            transform: scale(0.95);
        }

        .service-providers {
            justify-content: center;
            align-items: center;
            text-align: center;
            background-color: #fafafa;
            padding: 20px;
        }
        .service-providers h1 {
            font-size: 2.5em;
            margin: 10px 0;
            font-weight: 600;
            color: #00215f;
            text-align: center;
        }

        .line {
            width: 18%;
            border: 2px solid #00215f;
            border-radius: 5px;
            margin: auto;
        }

        /* Filter container styles */
        .filter-container {
            text-align: center;
            margin-top: 40px;
        }
        /* Search input styles */
        #location-input {
            padding: 6px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
            margin-bottom: 10px;
        }

        /* Category select styles */
        label {
            font-size: 16px;
            margin-right: 10px;
        }

        #service {
            padding: 6px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
        }

  /* Service providers container styles */
  .service-providers-container, 
  #service-providers-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 20px;
    padding: 20px 70px;
    text-align: center;
    background-color: #fafafa;
  }

  .service-provider-card {
    flex-basis: calc(33.33% - 20px);
    box-sizing: border-box;
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 5px;
  }

  .card-header {
    height: 200px;
    background-size: cover;
    background-position: center;
  }

  .card-view {
    background-size: cover;
    background-position: center;
  }

  /* Icon styles */
  .icons {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px 0;
  }

  .icon {
    display: inline-block;
    margin-right: 10px;
    font-size: 24px;
    color: #007bff;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .icon:hover {
    color: #0056b3;
  }

  /* Profile container styles */
  .profile-container {
    flex: 1;
  }

  .profile-header {
    text-align: center;
    margin-bottom: 20px;
  }

  .profile-header h2 {
    margin-top: 20px;
    color: #333;
  }

  .profile-details {
    padding: 10px;
    border-bottom: 1px solid #ddd;
    margin-bottom: 20px;
  }


  .profile-details h3 {
    font-size: 125px;
    color: #333;
  }

  .profile-details h3 {
    font-size: 19px;
    color: #333;
  }
  .profile-details h5 {
    font-size: 15px;
    color: #333;
  }
  #showSearchButton {
        background: linear-gradient(-100deg, #4158d0, #11245A);
        display: block;
        max-width: 400px;
        margin: 40px auto;
        padding: 10px 20px;
        color: #fff;
        font-size: 16px;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    #showSearchButton:hover {
        background-color: #0056b3;
    }
  /* Button styles */
  .btn-follow {
    margin: 0 auto;
    border: none;
    width: 90%;
    display: block;
    text-align: center;
    padding: 10px;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .btn-follow:hover {
    background-color: #0056b3;
  }

  /* Media query for responsive design */
  @media (max-width: 768px) {
    .service-providers-container, 
  #service-providers-container {
      flex-direction: column;
      padding: 20px 20px;
    }

    .service-providers h1 {
            font-size: 2em;
        }

    .service-provider-card {
      flex-basis: 100%;
    }
  }
  @media (max-width: 375px) {
    .header h1 {
        font-size: 2rem;
    }

    .header p {
        font-size: 14px;
    }
    .header .action-btn {
        font-size: 0.7em;
    }

    .service-providers h1 {
            font-size: 1.7em;
        }
    .service-providers-container, 
    #service-providers-container {
        padding: 50px 10px;
    }
  }
</style>

<header class="header">
  <div class="header-content">
      <h1>Welcome to Our Services</h1>
      <p>We provide a wide range of top-notch service providers to cater to your needs. Our team of experts is committed to delivering the best solutions for you.</p>
      <div class="buttons">
          <a href="#" class="action-btn">Learn More</a>
          <a href="/contact" class="action-btn">Contact Us</a>
      </div>
  </div>
</header>

<!-- Service Providers Section -->
<div class="service-container" id="service-container"></div>
<section class="service-providers">
  <h1>e-service Providers</h1>
  <div class="line"></div>
  <div class="filter-container">
  <button id="showSearchButton" class="action-btn"><i class='bx bx-search'></i> Search Service Providers</button>

<div class="filter-container" id="searchFormContainer" style="display: none;">
  <div class="profile-details"></div>
  <h1>Search Service Providers</h1>
  <form id="searchForm" action="/getServiceProvidersByServiceAndLocation" method="GET">
    <input type="text" id="location-input" placeholder="Location...">
    <select id="service">
      <option>House Cleaning</option>
        <option>Lawn maintenance</option>
        <option>Plumbing</option>
        <option>Home Repair</option>
        <option>Move Assistance</option>
        <option>Appliance Repair</option>
        <option>Haircut and Styling</option>
        <option>Skincare Treatment</option>
        <option>Fitness Training</option>
        <option>Personal Shopping</option>
        <option>Nail Care</option>
        <option>Makeup artistry</option>
        <option>Errands</option>
      <!-- Add your category options here -->
    </select>
    <button style="
      background: linear-gradient(-100deg, #4158d0, #11245A);
      display: block;
      max-width: 400px;
      margin: 10px auto;
      padding: 10px 20px;
      color: #fff;
      text-align: center;
      border-radius: 8px;
      transition: background-color 0.3s ease;  " type="submit">Search</button>
  </form>
</div>
  </div>

  <% 
  // Function to shuffle an array randomly
  function shuffleArray(array) {
      let shuffledArray = array.slice();
      for (let i = shuffledArray.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
      }
      return shuffledArray;
  }
  
  // Shuffle the allServiceProviders array randomly
  const shuffledServiceProviders = shuffleArray(allServiceProviders);
  %>
  <div id="service-providers-container" >
    <!-- Matching service providers will be dynamically added here -->
  </div>
  
  <div class="service-providers-container">
    <% shuffledServiceProviders.forEach(serviceProvider => { %>
      <div class="service-provider-card">
        <div class="profile-container">
          <div class="card-header" style="background-image: url(/uploads/<%=serviceProvider.profilePicture%>); border-radius: 5px;"></div>
          <div class="profile-header">
            <h2><%= serviceProvider.brandName %></h2>
          </div>
          <div class="profile-details">
            <h3><strong></strong> <%= serviceProvider.service %></h3>
            <div class="profile-details"></div>
            <h5><strong></strong> <%= serviceProvider.specialization %></h5>
            <p style="margin: 5px; font-size: 13px;"> <%= serviceProvider.location %></p>
          </div>
          <div class="card-view">
            <a href="/viewServiceProviderDetails/<%=serviceProvider._id %>" class="btn-follow">View profile</a>
          </div>
          <!-- Icons using Boxicons -->
          <div class="icons">
            <a href="mailto:<%= serviceProvider.email %>?subject=Service Inquiry" class="icon">
              <i class='bx bx-envelope'></i> <!-- Email icon -->
            </a>
            <a href="tel:<%= serviceProvider.phoneNumber %>" class="icon">
              <i class='bx bx-phone'></i> <!-- Phone icon -->
            </a>
            <a href="<%= serviceProvider.certificate %>" class="icon">
              <i class='bx bx-download'></i> <!-- Download icon -->
            </a>
          </div>
        </div>
      </div>
    <% }); %>
  </div>

<div class="profile-details"></div>

<%- include('partials/userFooter'); -%>

<script>
  const showSearchButton = document.getElementById("showSearchButton");
  const searchFormContainer = document.getElementById("searchFormContainer");
  const serviceProvidersContainer = document.querySelector('.service-providers-container');


  showSearchButton.addEventListener("click", () => {
    // Show the search form and hide the button
    showSearchButton.style.display = "none";
    searchFormContainer.style.display = "block";
  });

  // Function to hide the service providers container
  function hideServiceProviders() {
    serviceProvidersContainer.style.display = "none";
  }

  

// Shuffle function to randomize the array
function shuffleArray(array) {
  let shuffledArray = array.slice();
  for (let i = shuffledArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
  }
  return shuffledArray;
}

const searchForm = document.getElementById("searchForm");

searchForm.addEventListener("submit", async (event) => {
  event.preventDefault(); // Prevent the default form submission behavior

  const service = document.getElementById("service").value;
  const location = document.getElementById("location-input").value;

  // Send a GET request to the /getServiceProvidersByServiceAndLocation route with the query parameters

  // Send request to find matching service providers
  const response = await fetch(`/getServiceProvidersByServiceAndLocation?service=${service}&location=${location}`);

  if (response.ok) {
    const serviceProviders = await response.json(); // Store the response data
    // Process the data as needed
    console.log(serviceProviders);

    // Shuffle the service providers randomly
    const shuffledServiceProviders = shuffleArray(serviceProviders);

    // Display matching service providers
    const serviceProvidersContainer = document.getElementById("service-providers-container");
    serviceProvidersContainer.innerHTML = ""; // Clear previous content

    shuffledServiceProviders.forEach(serviceProvider => {
      const providerCard = document.createElement("div");
      providerCard.classList.add("service-provider-card");

      // Access the provider's details like:
      // serviceProvider.profilePicture, serviceProvider.brandName, serviceProvider.specialization

      providerCard.innerHTML = `
          <div class="profile-container">
            <div class="card-header" style="background-image: url(/uploads/${serviceProvider.profilePicture}); border-radius: 5px;"></div>
            <div class="profile-header">
              <h2>${serviceProvider.brandName}</h2>
            </div>
            <div class="profile-details">
              <h3><strong></strong> ${serviceProvider.service}</h3>
              <div class="profile-details"></div>
              <h5><strong></strong> ${serviceProvider.specialization}</h5>
              <p style="margin: 5px; font-size: 13px;"> ${serviceProvider.location}</p>
            </div>
            <div class="card-view">
              <a href="/viewServiceProviderDetails/${serviceProvider._id}" class="btn-follow">View profile</a>
            </div>
            <!-- Icons using Boxicons -->
            <div class="icons">
              <a href="mailto:${serviceProvider.email}?subject=Service Inquiry" class="icon">
                <i class='bx bx-envelope'></i> <!-- Email icon -->
              </a>
              <a href="tel:${serviceProvider.phoneNumber}" class="icon">
                <i class='bx bx-phone'></i> <!-- Phone icon -->
              </a>
              <a href="${serviceProvider.certificate}" class="icon">
                <i class='bx bx-download'></i> <!-- Download icon -->
              </a>
            </div>
          </div>
      `;

      serviceProvidersContainer.appendChild(providerCard);
    });

    hideServiceProviders();
  } else {
    console.error("Error searching for service providers");
    // Handle errors here
  }
});

const button = document.getElementById("location-input");


button.addEventListener("click", ()=>{
    if(navigator.geolocation){
        button.value = "Allow to detect location";
        navigator.geolocation.getCurrentPosition(onSuccess, onError);
    }else{
        button.value = "Your browser not support";
    }
});

function onSuccess(position){
    button.value = "Detecting your location...";
    let {latitude, longitude} = position.coords;
    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=ff5bb39b31c5449ba6f9b57c7fe5376a`)
    .then(response => response.json()).then(response =>{
        let allDetails = response.results[0].components;
        console.table(allDetails);
        let {state, city, road} = allDetails;
        button.value = `${state} ,${city},${road}`;
    }).catch(()=>{
        button.value = "Something went wrong";
    });
}

function onError(error){
    if(error.code == 1){
        button.innerText = "You denied the request";
    }else if(error.code == 2){
        button.innerText = "Location is unavailable";
    }else{
        button.innerText = "Something went wrong";
    }
    button.setAttribute("disabled", "true");
}

</script>
